<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小七的博客</title>
  
  <subtitle>www.xiaoqi.cn</subtitle>
  <link href="https://coloey.github.io/atom.xml" rel="self"/>
  
  <link href="https://coloey.github.io/"/>
  <updated>2021-11-15T15:58:07.127Z</updated>
  <id>https://coloey.github.io/</id>
  
  <author>
    <name>小七</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>location对象</title>
    <link href="https://coloey.github.io/2021/11/15/location%E5%AF%B9%E8%B1%A1/"/>
    <id>https://coloey.github.io/2021/11/15/location%E5%AF%B9%E8%B1%A1/</id>
    <published>2021-11-15T15:57:05.000Z</published>
    <updated>2021-11-15T15:58:07.127Z</updated>
    
    <content type="html"><![CDATA[<p><strong>BOM-location对象</strong></p><p>提供当前窗口加载文档的信息，以及通常的导航功能，它既是window的属性也是document的属性。</p><p><strong>功能</strong></p><p><strong>1 查询字符串</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> getQueryStringArgs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//取得没有开头问号的查询字符串</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> qs=(location.search.length&gt;<span class="number">0</span>)?location.search.substring(<span class="number">1</span>):<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> args=&#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span>(qs.split(<span class="string">&#x27;&amp;&#x27;</span>).map(<span class="function"><span class="params">kv</span>=&gt;</span>kv.split(<span class="string">&#x27;=&#x27;</span>))))&#123;</span><br><span class="line">        <span class="keyword">let</span> name=item[<span class="number">0</span>];</span><br><span class="line">            value=item[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(name.length)&#123;</span><br><span class="line">            args[name]=value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> args;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//qs=&quot;?q=javaScript&amp;num=10&quot;;</span></span><br><span class="line"><span class="keyword">let</span> args=getQueryStringArgs();</span><br><span class="line">alert(args[<span class="string">&quot;q&quot;</span>]);</span><br><span class="line">alert(args[<span class="string">&#x27;num&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>使用USLSearchParams检查和修改查询字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> qs=<span class="string">&quot;?q=javaScript&amp;num=10&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> searchParams=<span class="keyword">new</span> URLSearchParams(qs);</span><br><span class="line">alert(searchParams.toString());</span><br><span class="line">searchParams.has(<span class="string">&quot;num&quot;</span>);</span><br><span class="line">searchParams.get(<span class="string">&quot;num&quot;</span>);</span><br><span class="line">searchParams.set(<span class="string">&quot;page&quot;</span>,<span class="string">&quot;3&quot;</span>);</span><br><span class="line">alert(searchParams.toString());</span><br><span class="line">searchParams.delete(<span class="string">&quot;q&quot;</span>);</span><br><span class="line">alert(searchParams.toString());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> param <span class="keyword">of</span> searchParams)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(param);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.操作地址</strong></p><p>通过修改location对象修改浏览器地址，使用assign方法传进一个URL,会导航到新URL同时在浏览器历史记录增加一条记录，下面三种方法功能相同</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location.assign(<span class="string">&quot;http://www.wrox.com&quot;</span>);</span><br><span class="line"><span class="built_in">window</span>.location=<span class="string">&quot;http://www.wrox.com&quot;</span>;</span><br><span class="line">location.href=<span class="string">&quot;http://www.wrox.com&quot;</span>;</span><br></pre></td></tr></table></figure><p>通过修改location属性可以修改当前加载的页面,hash,search,hostname,pathname.port属性被设置为新值后会修改当前的URL</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//假设当前URL为http://www.wrox.com/WileyCDA/</span></span><br><span class="line">location.assign(<span class="string">&quot;http://www.wrox.com/WileyCDA&quot;</span>);</span><br><span class="line"><span class="comment">//把URL修改为http://www.wrox.com/WileyCDA/#section1</span></span><br><span class="line">location.hash=<span class="string">&quot;#section1&quot;</span>;</span><br><span class="line"><span class="comment">//把URL修改为http://www.wrox.com/WileyCDA/?q=javascript</span></span><br><span class="line">location.search=<span class="string">&quot;?q=javascript&quot;</span>;</span><br><span class="line"><span class="comment">//把URL修改为http://www.somewhere.com/WileyCDA/</span></span><br><span class="line">location.hostname=<span class="string">&quot;www.somewhere.com&quot;</span>;</span><br><span class="line"><span class="comment">//把URL修改为http://www.somewhere.com/mydir/</span></span><br><span class="line">location.pathname=<span class="string">&quot;mydir&quot;</span>;</span><br><span class="line"><span class="comment">//把URL修改为http://www.somewhere.com:8080/WileyCDA/</span></span><br><span class="line">location.port=<span class="number">8080</span>;</span><br></pre></td></tr></table></figure><p>以上的修改会在浏览器中增加记录，点击后退即可导航到前一个界面，不希望增加历史记录可以使用replace()方法，reload()可以重新加载当前页面，如果页面自从上次请求后没有修改过，则浏览器可能会从缓存中加载页面，如果想强制从服务器中加载，必须传入true</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;BOM-location对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;提供当前窗口加载文档的信息，以及通常的导航功能，它既是window的属性也是document的属性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1 查询字</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>navigator对象</title>
    <link href="https://coloey.github.io/2021/11/13/navigator%E5%AF%B9%E8%B1%A1/"/>
    <id>https://coloey.github.io/2021/11/13/navigator%E5%AF%B9%E8%B1%A1/</id>
    <published>2021-11-12T16:04:43.000Z</published>
    <updated>2021-11-15T15:46:00.660Z</updated>
    
    <content type="html"><![CDATA[<p>navigator对象通常用来确定浏览器的类型</p><p>检测插件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasPlugin</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    name=name.toLowerCase();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> plugin <span class="keyword">of</span> <span class="built_in">window</span>.navigator.plugins)&#123;</span><br><span class="line">        <span class="keyword">if</span>(plugin.name.toLowerCase().indexOf(name)&gt;-<span class="number">1</span>)&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//alert(hasPlugin(&quot;Flash&quot;));</span></span><br><span class="line"><span class="comment">//alert(hasPlugin(&quot;QuickTime&quot;));</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasIEPlugin</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">new</span> ActiveXObject(name);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(ex)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在所有浏览器中检测插件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasFlash</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result=hasPlugin(<span class="string">&quot;Flash&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!result)&#123;</span><br><span class="line">        result=hasIEPlugin(<span class="string">&quot;ShockwaveFlash.ShockwaveFlash&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasQuickTime</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> res=hasPlugin(<span class="string">&quot;QuickTime&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!res)&#123;</span><br><span class="line">        res=hasIEPlugin(<span class="string">&quot;QuickTime.QuickTime&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">alert(hasFlash());</span><br><span class="line">alert(hasQuickTime());</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;navigator对象通常用来确定浏览器的类型&lt;/p&gt;
&lt;p&gt;检测插件&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa</summary>
      
    
    
    
    
  </entry>
  
</feed>
